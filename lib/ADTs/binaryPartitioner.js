// Generated by CoffeeScript 1.10.0

/*
    Binary Partitioner Interface.

    Written by Bryce Summers on 6/26/2016.
    
    Purpose:
     - Binary Partitioners are able to partition incoming points into the spaces defined by the parttioner.
     - i.e. for a line, the spaces would be the two half planes on either side of the line and the set of all points on the line.
 */

(function() {
  BT2D.BinaryPartitioner = (function() {
    function BinaryPartitioner() {}

    BinaryPartitioner.prototype.side_test = function(pt) {
      console.log("Interface only.");
      debugger;
    };

    BinaryPartitioner.prototype.side_test_scalar = function(pt) {
      console.log("Interface only.");
      debugger;
    };

    BinaryPartitioner.prototype.orientPts = function(pt1, pt2) {
      var side1, side2;
      side1 = this.side_test_scalar(pt1);
      side2 = this.side_test_scalar(pt2);
      if (side1 < side2) {
        return [pt1, pt2];
      }
      return [pt2, pt1];
    };

    BinaryPartitioner.prototype.representative_point = function() {
      console.log("Interface only.");
      debugger;
    };

    BinaryPartitioner.prototype.ray_partition_intersection_time = function(ray) {
      console.log("Interface only.");
      debugger;
    };

    BinaryPartitioner.prototype.getPerpendicularPercentage = function(ray) {
      console.log("Interface only.");
      debugger;
    };

    BinaryPartitioner.prototype.containsEndPoint = function(pts) {
      console.log("Interface only.");
      debugger;
    };

    return BinaryPartitioner;

  })();

}).call(this);
