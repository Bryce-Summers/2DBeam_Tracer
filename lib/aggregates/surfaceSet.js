// Generated by CoffeeScript 1.10.0

/*
    SurfaceSet

    Written by Bryce Summers on 6/18/2016.
    
    Purpose:
     - This class represents a comprehensive set of Surfaces embedded in a plane and specifies a 2D scene graph.
     - This class maintains the set through a spatial partitioning of the plane that allows for:
        - efficient ray - linearSurfaceSet intersections and
        - efficient frustrum - linearSurfaceSet intersections through binary spatial partitioning.
 */

(function() {
  BT2D.SurfaceSet = (function() {
    function SurfaceSet() {
      this._set = [];
      this._emissive_set = [];
      this._bsp = null;
    }

    SurfaceSet.prototype.add = function(surface) {
      this._set.push(surface);
      if (surface.isEmissiveSource()) {
        return this._emissive_set.push(surface);
      }
    };

    SurfaceSet.prototype.clear = function() {
      this._set = [];
      return this._emissive_set = [];
    };

    SurfaceSet.prototype.emitSourceFrustrums = function() {
      var emmitted_frustrum_set, frustrum, i, j, len, len1, output, ref, surface;
      output = [];
      ref = this._emissive_set;
      for (i = 0, len = ref.length; i < len; i++) {
        surface = ref[i];
        emmitted_frustrum_set = surface.emitSourceFrustrums();
        for (j = 0, len1 = emmitted_frustrum_set.length; j < len1; j++) {
          frustrum = emmitted_frustrum_set[j];
          output.push(frustrum);
        }
      }
      return output;
    };

    SurfaceSet.prototype.generateBSP = function() {
      return this._bsp = new BT2D.BSP(this._set);
    };

    SurfaceSet.prototype.intersectRay = function(ray, intersection, min_time) {
      if (this._bsp === null) {
        console.log("Error: BSP has not yet been formed.");
        debugger;
      }
      return this._bsp.intersectRay(ray, intersection, min_time);
    };

    SurfaceSet.prototype.intersectFrustrum = function(frustrum, min_time1, min_time2) {
      return this._bsp.intersectFrustrum(frustrum, min_time1, min_time2);
    };

    return SurfaceSet;

  })();

}).call(this);
