// Generated by CoffeeScript 1.10.0

/*
    ArraySurfaceSet

    Written by Bryce Summers on 7/2/2016
    
    Purpose:
     - This class represents a set of surfaces using an array.
     - This class is meant to be used as leaf nodes in a BSP.
     - BSP trees will likely use these with non-intersecting surfaces.
 */

(function() {
  BT2D.LeafSurfaceSet = (function() {
    function LeafSurfaceSet(surface_set) {
      var i, len, surface;
      this._set = [];
      for (i = 0, len = surface_set.length; i < len; i++) {
        surface = surface_set[i];
        this.addSurface(surface);
      }
    }

    LeafSurfaceSet.prototype.addSurface = function(surface) {
      return this._set.push(surface);
    };

    LeafSurfaceSet.prototype.clearSurfaces = function() {
      return this._set = [];
    };

    LeafSurfaceSet.prototype.intersectRay = function(ray, intersection, min_time) {
      var i, len, ref, surface;
      ref = this._set;
      for (i = 0, len = ref.length; i < len; i++) {
        surface = ref[i];
        if (surface.intersectRay(ray, intersection, min_time)) {
          return true;
        }
      }
      return false;
    };

    LeafSurfaceSet.prototype.intersectFrustrum = function(frustrum, min_time1, min_time2) {
      var found, i, left, len, ref, ref1, right, surface;
      ref = this._set;
      for (i = 0, len = ref.length; i < len; i++) {
        surface = ref[i];
        ref1 = surface.intersectFrustrum(frustrum, min_time1, min_time2), found = ref1[0], left = ref1[1], right = ref1[2], surface = ref1[3];
        if (found) {
          return [true, left, right, surface];
        }
      }
      return [false, null, null, null];
    };

    return LeafSurfaceSet;

  })();

}).call(this);
