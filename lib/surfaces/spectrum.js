// Generated by CoffeeScript 1.10.0

/*
    Spectrum object.

    Written by Bryce Summers on 6/18/2016.
    
    Purpose:
     - This class represents an Electromagnetic radiation spectrum.
     
    What does that mean?
 */

(function() {
  BT2D.Spectrum = (function() {
    function Spectrum(red, green, blue) {
      this.red = red;
      this.green = green;
      this.blue = blue;
      if (this.red < 0 || this.red > 1) {
        throw new Error("bad red value");
      }
      if (this.green < 0 || this.green > 1) {
        throw new Error("bad green value");
      }
      if (this.blue < 0 || this.blue > 1) {
        throw new Error("bad blue value");
      }
    }

    Spectrum.prototype.imperceptible = function() {
      return this.red + this.green + this.blue < .01;
    };

    Spectrum.prototype.toColor = function() {
      return new THREE.Color(this.red, this.green, this.blue);
    };

    Spectrum.prototype.mult = function(other) {
      return new BT2D.Spectrum(this.red * other.red, this.green * other.green, this.blue * other.blue);
    };

    Spectrum.prototype.multScalar = function(s) {
      return new BT2D.Spectrum(this.red * s, this.green * s, this.blue * s);
    };

    Spectrum.prototype.add = function(other) {
      return new BT2D.Spectrum(this.red + other.red, this.green + other.green, this.blue + other.blue);
    };

    Spectrum.prototype.clone = function() {
      return new BT2D.Spectrum(this.red, this.green, this.blue);
    };

    Spectrum.prototype.decay = function(dist1) {
      var max_length;
      max_length = BT2D.Constants.LIGHT_LENGTH;
      return this.multScalar(Math.max(0, Math.min(1.0, 1.0 - dist1 / max_length)));
    };

    return Spectrum;

  })();

}).call(this);
