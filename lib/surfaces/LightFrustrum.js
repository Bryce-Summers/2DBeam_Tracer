// Generated by CoffeeScript 1.10.0

/*
    LightFrustrum

    Written by Bryce Summers on 6/18/2016.
    
    Purpose:
    
        This class represents a frustrum illuminated via
        spectrum paths.
        
    Representation the colors coorespond to the vertices in the following order:
            start1(), start2(), getEnd2(), frustrum.getEnd1()

    The LightFrustrum is said to be complete then it has all 4 points, but imcomplete it it only has the near points defined.
 */

(function() {
  BT2D.LightFrustrum = (function() {
    function LightFrustrum(frustrum, spectrum1, spectrum2) {
      this.frustrum = frustrum;
      this.spectrum1 = spectrum1;
      this.spectrum2 = spectrum2;
      this.spectrum3 = null;
      this.spectrum4 = null;
    }

    LightFrustrum.prototype.complete = function(end1, end2, dist1, dist2) {
      this.frustrum.complete(end1, end2);
      this.spectrum4 = this.spectrum1.decay(dist1);
      return this.spectrum3 = this.spectrum2.decay(dist2);
    };

    LightFrustrum.prototype.getEndSpectrum1 = function() {
      return this.spectrum4;
    };

    LightFrustrum.prototype.getEndSpectrum2 = function() {
      return this.spectrum3;
    };

    LightFrustrum.prototype.convertToTriangles = function(frustrumDrawer) {
      var c1, c2, c3, c4, v1, v2, v3, v4;
      if (this.spectrum3 === null || this.spectrum4 === null) {
        console.log("Incomplete Frustrum, likely no intersection was found during tracing.");
        return;
      }
      v1 = this.frustrum.getStart1();
      v2 = this.frustrum.getStart2();
      v3 = this.frustrum.getEnd2();
      v4 = this.frustrum.getEnd1();
      c1 = this.spectrum1.toColor();
      c2 = this.spectrum2.toColor();
      c3 = this.spectrum3.toColor();
      c4 = this.spectrum4.toColor();
      frustrumDrawer.addTriangle(v1, v2, v3, c1, c2, c3);
      return frustrumDrawer.addTriangle(v3, v4, v1, c3, c4, c1);
    };

    return LightFrustrum;

  })();

}).call(this);
